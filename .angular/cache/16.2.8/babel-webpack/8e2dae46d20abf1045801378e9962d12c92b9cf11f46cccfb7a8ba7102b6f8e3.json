{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/facade/table.facade.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"../some-table/some-table.component\";\nfunction TablesComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"p\");\n    i0.ɵɵtext(2, \"Hmm\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"app-some-table\", 2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const tableForm_r1 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    i0.ɵɵattribute(\"data-index\", i_r2 + 1);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"tableForm\", tableForm_r1);\n  }\n}\nexport class TablesComponent {\n  constructor(tableFacade) {\n    this.tableFacade = tableFacade;\n    this.tableForm$ = this.tableFacade.tableForm$;\n  }\n  ngOnInit() {}\n  static #_ = this.ɵfac = function TablesComponent_Factory(t) {\n    return new (t || TablesComponent)(i0.ɵɵdirectiveInject(i1.TableFacade));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TablesComponent,\n    selectors: [[\"app-tables\"]],\n    decls: 4,\n    vars: 3,\n    consts: [[\"class\", \"tables-container\", 4, \"ngFor\", \"ngForOf\"], [1, \"tables-container\"], [3, \"tableForm\"]],\n    template: function TablesComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1, \"Tables\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(2, TablesComponent_div_2_Template, 4, 2, \"div\", 0);\n        i0.ɵɵpipe(3, \"async\");\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(3, 1, ctx.tableForm$));\n      }\n    },\n    dependencies: [i2.NgForOf, i3.SomeTableComponent, i2.AsyncPipe],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵattribute","i_r2","ɵɵadvance","ɵɵproperty","tableForm_r1","TablesComponent","constructor","tableFacade","tableForm$","ngOnInit","_","ɵɵdirectiveInject","i1","TableFacade","_2","selectors","decls","vars","consts","template","TablesComponent_Template","rf","ctx","ɵɵtemplate","TablesComponent_div_2_Template","ɵɵpipeBind1"],"sources":["/home/thomaskv/code/learn/angular-reactive-form-table/src/app/components/tables/tables.component.ts","/home/thomaskv/code/learn/angular-reactive-form-table/src/app/components/tables/tables.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { TableFacade } from 'src/app/facade/table.facade.service';\n\n@Component({\n  selector: 'app-tables',\n  templateUrl: './tables.component.html',\n  styleUrls: ['./tables.component.css'],\n})\nexport class TablesComponent implements OnInit {\n  constructor(\n    private tableFacade: TableFacade\n  ) { }\n\n  public tableForm$ = this.tableFacade.tableForm$\n\n  ngOnInit() {\n    \n  }\n}\n","<h1>Tables</h1>\n<div\n    class=\"tables-container\"\n    *ngFor=\"let tableForm of tableForm$ | async; let i = index;\"\n    [attr.data-index]=\"i + 1\"\n>\n<p>Hmm</p>\n<app-some-table [tableForm]=\"tableForm\"></app-some-table>\n</div>"],"mappings":";;;;;;ICCAA,EAAA,CAAAC,cAAA,aAIC;IACED,EAAA,CAAAE,MAAA,UAAG;IAAAF,EAAA,CAAAG,YAAA,EAAI;IACVH,EAAA,CAAAI,SAAA,wBAAyD;IACzDJ,EAAA,CAAAG,YAAA,EAAM;;;;;IAJFH,EAAA,CAAAK,WAAA,eAAAC,IAAA,KAAyB;IAGbN,EAAA,CAAAO,SAAA,GAAuB;IAAvBP,EAAA,CAAAQ,UAAA,cAAAC,YAAA,CAAuB;;;ADCvC,OAAM,MAAOC,eAAe;EAC1BC,YACUC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;IAGd,KAAAC,UAAU,GAAG,IAAI,CAACD,WAAW,CAACC,UAAU;EAF3C;EAIJC,QAAQA,CAAA,GAER;EAAC,QAAAC,CAAA,G;qBATUL,eAAe,EAAAV,EAAA,CAAAgB,iBAAA,CAAAC,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAfT,eAAe;IAAAU,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,yBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCR5B1B,EAAA,CAAAC,cAAA,SAAI;QAAAD,EAAA,CAAAE,MAAA,aAAM;QAAAF,EAAA,CAAAG,YAAA,EAAK;QACfH,EAAA,CAAA4B,UAAA,IAAAC,8BAAA,iBAOM;;;;QALoB7B,EAAA,CAAAO,SAAA,GAAuB;QAAvBP,EAAA,CAAAQ,UAAA,YAAAR,EAAA,CAAA8B,WAAA,OAAAH,GAAA,CAAAd,UAAA,EAAuB"},"metadata":{},"sourceType":"module","externalDependencies":[]}