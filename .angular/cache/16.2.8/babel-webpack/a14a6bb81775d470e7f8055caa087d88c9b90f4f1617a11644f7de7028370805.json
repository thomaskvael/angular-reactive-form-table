{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../service/form.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction SomeTableComponent_div_0_tr_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 1);\n    i0.ɵɵelement(2, \"input\", 3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\", 1);\n    i0.ɵɵelement(4, \"input\", 4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\", 1);\n    i0.ɵɵelement(6, \"input\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\", 1);\n    i0.ɵɵelement(8, \"input\", 6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const rowIndex_r5 = ctx.index;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroupName\", rowIndex_r5);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"formGroupName\", rowIndex_r5);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"formGroupName\", rowIndex_r5);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"formGroupName\", rowIndex_r5);\n  }\n}\nfunction SomeTableComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 1)(2, \"table\")(3, \"thead\")(4, \"tr\")(5, \"th\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"th\");\n    i0.ɵɵtext(8, \" Counter \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"th\");\n    i0.ɵɵtext(10, \" Total \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"th\");\n    i0.ɵɵtext(12, \" Adjustment \");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(13, \"tbody\", 2);\n    i0.ɵɵtemplate(14, SomeTableComponent_div_0_tr_14_Template, 9, 4, \"tr\", 0);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const area_r1 = ctx.$implicit;\n    const areaIndex_r2 = ctx.index;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroupName\", areaIndex_r2);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", area_r1.controls.area.value, \" \");\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"ngForOf\", area_r1.controls[\"rows\"].controls);\n  }\n}\nexport class SomeTableComponent {\n  //@Input() areaForm: FormArray<FormGroup<TableFormArea>>;\n  constructor(formService) {\n    this.formService = formService;\n    //myForm: FormGroup;\n    this.myForm = this.formService.tableForm;\n  }\n  static #_ = this.ɵfac = function SomeTableComponent_Factory(t) {\n    return new (t || SomeTableComponent)(i0.ɵɵdirectiveInject(i1.FormService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SomeTableComponent,\n    selectors: [[\"app-some-table\"]],\n    inputs: {\n      tableForm: \"tableForm\",\n      areaIndex: \"areaIndex\"\n    },\n    decls: 1,\n    vars: 1,\n    consts: [[4, \"ngFor\", \"ngForOf\"], [3, \"formGroupName\"], [\"formArrayName\", \"rows\"], [\"formControlName\", \"area\"], [\"formControlName\", \"tableCounter\"], [\"formControlName\", \"tableTotal\"], [\"formControlName\", \"tableAdjustment\"]],\n    template: function SomeTableComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, SomeTableComponent_div_0_Template, 15, 3, \"div\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngForOf\", ctx.tableForm.controls[\"areas\"].controls);\n      }\n    },\n    dependencies: [i2.NgForOf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormControlName, i3.FormGroupName, i3.FormArrayName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","rowIndex_r5","ɵɵtext","ɵɵtemplate","SomeTableComponent_div_0_tr_14_Template","areaIndex_r2","ɵɵtextInterpolate1","area_r1","controls","area","value","SomeTableComponent","constructor","formService","myForm","tableForm","_","ɵɵdirectiveInject","i1","FormService","_2","selectors","inputs","areaIndex","decls","vars","consts","template","SomeTableComponent_Template","rf","ctx","SomeTableComponent_div_0_Template"],"sources":["/home/thomaskv/code/learn/angular-reactive-form-table/src/app/components/some-table/some-table.component.ts","/home/thomaskv/code/learn/angular-reactive-form-table/src/app/components/some-table/some-table.component.html"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { FormArray, FormGroup } from '@angular/forms';\n\n//import { ValidateUrl, emailDomain } from '../validator';\nimport { FormService, TableFormArea, TableFormAreas } from '../../service/form.service';\nimport { Observable, tap } from 'rxjs';\n\n@Component({\n  selector: 'app-some-table',\n  templateUrl: './some-table.component.html',\n  styleUrls: ['./some-table.component.css'],\n})\nexport class SomeTableComponent{\n  //myForm: FormGroup;\n  public myForm: FormGroup = this.formService.tableForm;\n\n\n\n  @Input() tableForm!: FormGroup<TableFormAreas>;\n  @Input() areaIndex: number;\n  //@Input() areaForm: FormArray<FormGroup<TableFormArea>>;\n\n  constructor(private formService: FormService) {}\n}\n","\n  <div *ngFor=\"let area of tableForm.controls['areas'].controls; let areaIndex=index;\">\n    <div [formGroupName]=\"areaIndex\">\n        <table>\n            <thead>\n                <tr>\n                    <th>\n                        {{area.controls.area.value}}\n                    </th>\n                    <th>\n                        Counter\n                    </th>\n                    <th>\n                        Total\n                    </th>\n                    <th>\n                        Adjustment\n                    </th>\n                </tr>\n            </thead>\n            <!--{{ area.controls.area.value }}-->\n            <tbody formArrayName=\"rows\">\n                <tr *ngFor=\"let row of area.controls['rows'].controls; let rowIndex=index\">\n                    <td [formGroupName]=\"rowIndex\">\n                        <input formControlName=\"area\" />\n                    </td>\n                    <td [formGroupName]=\"rowIndex\">\n                        <input formControlName=\"tableCounter\" />\n                    </td>\n                    <td [formGroupName]=\"rowIndex\">\n                        <input formControlName=\"tableTotal\" />\n                    </td>\n                    <td [formGroupName]=\"rowIndex\">\n                        <input formControlName=\"tableAdjustment\" />\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n  </div>"],"mappings":";;;;;;ICsBgBA,EAAA,CAAAC,cAAA,SAA2E;IAEnED,EAAA,CAAAE,SAAA,eAAgC;IACpCF,EAAA,CAAAG,YAAA,EAAK;IACLH,EAAA,CAAAC,cAAA,YAA+B;IAC3BD,EAAA,CAAAE,SAAA,eAAwC;IAC5CF,EAAA,CAAAG,YAAA,EAAK;IACLH,EAAA,CAAAC,cAAA,YAA+B;IAC3BD,EAAA,CAAAE,SAAA,eAAsC;IAC1CF,EAAA,CAAAG,YAAA,EAAK;IACLH,EAAA,CAAAC,cAAA,YAA+B;IAC3BD,EAAA,CAAAE,SAAA,eAA2C;IAC/CF,EAAA,CAAAG,YAAA,EAAK;;;;IAXDH,EAAA,CAAAI,SAAA,GAA0B;IAA1BJ,EAAA,CAAAK,UAAA,kBAAAC,WAAA,CAA0B;IAG1BN,EAAA,CAAAI,SAAA,GAA0B;IAA1BJ,EAAA,CAAAK,UAAA,kBAAAC,WAAA,CAA0B;IAG1BN,EAAA,CAAAI,SAAA,GAA0B;IAA1BJ,EAAA,CAAAK,UAAA,kBAAAC,WAAA,CAA0B;IAG1BN,EAAA,CAAAI,SAAA,GAA0B;IAA1BJ,EAAA,CAAAK,UAAA,kBAAAC,WAAA,CAA0B;;;;;IA/BhDN,EAAA,CAAAC,cAAA,UAAqF;IAM/DD,EAAA,CAAAO,MAAA,GACJ;IAAAP,EAAA,CAAAG,YAAA,EAAK;IACLH,EAAA,CAAAC,cAAA,SAAI;IACAD,EAAA,CAAAO,MAAA,gBACJ;IAAAP,EAAA,CAAAG,YAAA,EAAK;IACLH,EAAA,CAAAC,cAAA,SAAI;IACAD,EAAA,CAAAO,MAAA,eACJ;IAAAP,EAAA,CAAAG,YAAA,EAAK;IACLH,EAAA,CAAAC,cAAA,UAAI;IACAD,EAAA,CAAAO,MAAA,oBACJ;IAAAP,EAAA,CAAAG,YAAA,EAAK;IAIbH,EAAA,CAAAC,cAAA,gBAA4B;IACxBD,EAAA,CAAAQ,UAAA,KAAAC,uCAAA,gBAaK;IACTT,EAAA,CAAAG,YAAA,EAAQ;;;;;IAlCXH,EAAA,CAAAI,SAAA,GAA2B;IAA3BJ,EAAA,CAAAK,UAAA,kBAAAK,YAAA,CAA2B;IAKZV,EAAA,CAAAI,SAAA,GACJ;IADIJ,EAAA,CAAAW,kBAAA,MAAAC,OAAA,CAAAC,QAAA,CAAAC,IAAA,CAAAC,KAAA,MACJ;IAcgBf,EAAA,CAAAI,SAAA,GAAmC;IAAnCJ,EAAA,CAAAK,UAAA,YAAAO,OAAA,CAAAC,QAAA,SAAAA,QAAA,CAAmC;;;ADVvE,OAAM,MAAOG,kBAAkB;EAQ7B;EAEAC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;IAT/B;IACO,KAAAC,MAAM,GAAc,IAAI,CAACD,WAAW,CAACE,SAAS;EAQN;EAAC,QAAAC,CAAA,G;qBAVrCL,kBAAkB,EAAAhB,EAAA,CAAAsB,iBAAA,CAAAC,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAlBT,kBAAkB;IAAAU,SAAA;IAAAC,MAAA;MAAAP,SAAA;MAAAQ,SAAA;IAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,4BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCX7BlC,EAAA,CAAAQ,UAAA,IAAA4B,iCAAA,kBAsCM;;;QAtCgBpC,EAAA,CAAAK,UAAA,YAAA8B,GAAA,CAAAf,SAAA,CAAAP,QAAA,UAAAA,QAAA,CAAyC"},"metadata":{},"sourceType":"module","externalDependencies":[]}