{"ast":null,"code":"import { tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/facade/table.facade.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction TablesComponent_div_2_div_2_tr_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 4);\n    i0.ɵɵelement(2, \"input\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\", 4);\n    i0.ɵɵelement(4, \"input\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\", 4);\n    i0.ɵɵelement(6, \"input\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\", 4);\n    i0.ɵɵelement(8, \"input\", 9);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const rowIndex_r7 = ctx.index;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroupName\", rowIndex_r7);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"formGroupName\", rowIndex_r7);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"formGroupName\", rowIndex_r7);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"formGroupName\", rowIndex_r7);\n  }\n}\nfunction TablesComponent_div_2_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 4)(2, \"table\")(3, \"thead\")(4, \"tr\")(5, \"th\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"th\");\n    i0.ɵɵtext(8, \" Counter \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"th\");\n    i0.ɵɵtext(10, \" Total \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"th\");\n    i0.ɵɵtext(12, \" Adjustment \");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(13, \"tbody\", 5);\n    i0.ɵɵtemplate(14, TablesComponent_div_2_div_2_tr_14_Template, 9, 4, \"tr\", 3);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const area_r3 = ctx.$implicit;\n    const areaIndex_r4 = ctx.index;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroupName\", areaIndex_r4);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", area_r3.controls.area.value, \" \");\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"ngForOf\", area_r3.controls[\"rows\"].controls);\n  }\n}\nfunction TablesComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2);\n    i0.ɵɵtemplate(2, TablesComponent_div_2_div_2_Template, 15, 3, \"div\", 3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const tableForm_r1 = ctx.ngIf;\n    i0.ɵɵproperty(\"formGroup\", tableForm_r1);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", tableForm_r1.controls[\"areas\"].controls);\n  }\n}\nexport class TablesComponent {\n  constructor(tableFacade) {\n    this.tableFacade = tableFacade;\n    this.tableForm = this.tableFacade.myForm;\n    this.tableForm$ = this.tableFacade.tableForm$.pipe(tap(v => console.log('tap: ', v)));\n  }\n  static #_ = this.ɵfac = function TablesComponent_Factory(t) {\n    return new (t || TablesComponent)(i0.ɵɵdirectiveInject(i1.TableFacade));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TablesComponent,\n    selectors: [[\"app-tables\"]],\n    decls: 4,\n    vars: 3,\n    consts: [[3, \"formGroup\", 4, \"ngIf\"], [3, \"formGroup\"], [\"formArrayName\", \"areas\"], [4, \"ngFor\", \"ngForOf\"], [3, \"formGroupName\"], [\"formArrayName\", \"rows\"], [\"formControlName\", \"area\"], [\"formControlName\", \"tableCounter\"], [\"formControlName\", \"tableTotal\"], [\"formControlName\", \"tableAdjustment\"]],\n    template: function TablesComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1, \"Tables\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(2, TablesComponent_div_2_Template, 3, 2, \"div\", 0);\n        i0.ɵɵpipe(3, \"async\");\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(3, 1, ctx.tableForm$));\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgIf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName, i3.FormGroupName, i3.FormArrayName, i2.AsyncPipe],\n    styles: [\"table[_ngcontent-%COMP%] {\\n  width: 800px;\\n  text-align: left;\\n}\\ntable[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%] {\\n  background-color: gainsboro;\\n}\\ntable[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]   th[_ngcontent-%COMP%] {\\n  padding: 5px;\\n}\\ntable[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%] {\\n  background-color: whitesmoke;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy90YWJsZXMvdGFibGVzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksWUFBQTtFQUNBLGdCQUFBO0FBQ0o7QUFDSTtFQUNJLDJCQUFBO0FBQ1I7QUFDUTtFQUNJLFlBQUE7QUFDWjtBQUdJO0VBQ0ksNEJBQUE7QUFEUiIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHtcbiAgICB3aWR0aDogODAwcHg7XG4gICAgdGV4dC1hbGlnbjogbGVmdDtcblxuICAgIHRoZWFkIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogZ2FpbnNib3JvO1xuXG4gICAgICAgIHRoIHtcbiAgICAgICAgICAgIHBhZGRpbmc6IDVweDs7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICB0Ym9keSB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlc21va2U7XG4gICAgfVxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["tap","i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","rowIndex_r7","ɵɵtext","ɵɵtemplate","TablesComponent_div_2_div_2_tr_14_Template","areaIndex_r4","ɵɵtextInterpolate1","area_r3","controls","area","value","TablesComponent_div_2_div_2_Template","tableForm_r1","TablesComponent","constructor","tableFacade","tableForm","myForm","tableForm$","pipe","v","console","log","_","ɵɵdirectiveInject","i1","TableFacade","_2","selectors","decls","vars","consts","template","TablesComponent_Template","rf","ctx","TablesComponent_div_2_Template","ɵɵpipeBind1"],"sources":["/home/thomaskv/code/learn/angular-reactive-form-table/src/app/components/tables/tables.component.ts","/home/thomaskv/code/learn/angular-reactive-form-table/src/app/components/tables/tables.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Observable, tap } from 'rxjs';\nimport { TableFacade } from 'src/app/facade/table.facade.service';\nimport { TableFormAreas } from 'src/app/service/form.service';\n\n@Component({\n  selector: 'app-tables',\n  templateUrl: './tables.component.html',\n  styleUrls: ['./tables.component.scss'],\n})\nexport class TablesComponent {\n  constructor(\n    private tableFacade: TableFacade\n  ) { }\n\n  public tableForm = this.tableFacade.myForm;\n\n  public tableForm$: Observable<FormGroup<TableFormAreas>> = this.tableFacade.tableForm$.pipe(tap(v => console.log('tap: ', v)));\n}\n","<h1>Tables</h1>\n\n<div *ngIf=\"tableForm$ | async as tableForm\" [formGroup]=\"tableForm\">\n\n<div formArrayName=\"areas\">\n\n    <div *ngFor=\"let area of tableForm.controls['areas'].controls; let areaIndex=index;\">\n        <div [formGroupName]=\"areaIndex\">\n            <table>\n                <thead>\n                    <tr>\n                        <th>\n                            {{area.controls.area.value}}\n                        </th>\n                        <th>\n                            Counter\n                        </th>\n                        <th>\n                            Total\n                        </th>\n                        <th>\n                            Adjustment\n                        </th>\n                    </tr>\n                </thead>\n                <!--{{ area.controls.area.value }}-->\n                <tbody formArrayName=\"rows\">\n                    <tr *ngFor=\"let row of area.controls['rows'].controls; let rowIndex=index\">\n                        <td [formGroupName]=\"rowIndex\">\n                            <input formControlName=\"area\" />\n                        </td>\n                        <td [formGroupName]=\"rowIndex\">\n                            <input formControlName=\"tableCounter\" />\n                        </td>\n                        <td [formGroupName]=\"rowIndex\">\n                            <input formControlName=\"tableTotal\" />\n                        </td>\n                        <td [formGroupName]=\"rowIndex\">\n                            <input formControlName=\"tableAdjustment\" />\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n  \n</div>\n\n<!--<div *ngFor=\"let tableForm of tableForm$ | async\">\n<p>Hmm</p>\n<app-some-table [tableForm]=\"tableForm\"></app-some-table>\n</div>-->\n\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}