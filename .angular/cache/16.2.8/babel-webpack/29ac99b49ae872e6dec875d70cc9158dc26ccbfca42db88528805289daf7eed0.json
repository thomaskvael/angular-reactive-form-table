{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/facade/table.facade.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction TablesComponent_div_2_div_2_tr_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 5);\n    i0.ɵɵelement(2, \"input\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\", 5);\n    i0.ɵɵelement(4, \"input\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\", 5);\n    i0.ɵɵelement(6, \"input\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\", 5);\n    i0.ɵɵelement(8, \"input\", 10);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const rowIndex_r7 = ctx.index;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroupName\", rowIndex_r7);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"formGroupName\", rowIndex_r7);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"formGroupName\", rowIndex_r7);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"formGroupName\", rowIndex_r7);\n  }\n}\nfunction TablesComponent_div_2_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 5)(2, \"table\")(3, \"thead\")(4, \"tr\")(5, \"th\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"th\");\n    i0.ɵɵtext(8, \" Counter \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"th\");\n    i0.ɵɵtext(10, \" Total \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"th\");\n    i0.ɵɵtext(12, \" Adjustment \");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(13, \"tbody\", 6);\n    i0.ɵɵtemplate(14, TablesComponent_div_2_div_2_tr_14_Template, 9, 4, \"tr\", 4);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const area_r3 = ctx.$implicit;\n    const areaIndex_r4 = ctx.index;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroupName\", areaIndex_r4);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", area_r3.controls.area.value, \" \");\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"ngForOf\", area_r3.controls[\"rows\"].controls);\n  }\n}\nfunction TablesComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"div\", 3);\n    i0.ɵɵtemplate(2, TablesComponent_div_2_div_2_Template, 15, 3, \"div\", 4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const tableForm_r1 = ctx.ngIf;\n    i0.ɵɵproperty(\"formGroup\", tableForm_r1);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", tableForm_r1.controls[\"areas\"].controls);\n  }\n}\nexport class TablesComponent {\n  constructor(tableFacade) {\n    this.tableFacade = tableFacade;\n    this.tableForm = this.tableFacade.myForm;\n    this.tableForm$ = this.tableFacade.tableForm$;\n  }\n  // Hacky recursive loop from Stackoverflow\n  getDirtyValues(form) {\n    let dirtyValues = {};\n    Object.keys(form.controls).forEach(key => {\n      const currentControl = form.controls[key];\n      if (currentControl.dirty) {\n        if (currentControl.controls) dirtyValues[key] = this.getDirtyValues(currentControl);else dirtyValues[key] = currentControl.value;\n      }\n    });\n    return dirtyValues;\n  }\n  submitTableForm() {\n    console.log('SUBMIT');\n    console.log(this.tableForm.controls);\n    console.log('CHANGES');\n    console.log(this.getDirtyValues(this.tableForm));\n  }\n  static #_ = this.ɵfac = function TablesComponent_Factory(t) {\n    return new (t || TablesComponent)(i0.ɵɵdirectiveInject(i1.TableFacade));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TablesComponent,\n    selectors: [[\"app-tables\"]],\n    decls: 6,\n    vars: 3,\n    consts: [[3, \"formGroup\", 4, \"ngIf\"], [3, \"click\"], [3, \"formGroup\"], [\"formArrayName\", \"areas\"], [4, \"ngFor\", \"ngForOf\"], [3, \"formGroupName\"], [\"formArrayName\", \"rows\"], [\"formControlName\", \"area\"], [\"formControlName\", \"tableCounter\"], [\"formControlName\", \"tableTotal\"], [\"formControlName\", \"tableAdjustment\"]],\n    template: function TablesComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1, \"Tables\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(2, TablesComponent_div_2_Template, 3, 2, \"div\", 0);\n        i0.ɵɵpipe(3, \"async\");\n        i0.ɵɵelementStart(4, \"button\", 1);\n        i0.ɵɵlistener(\"click\", function TablesComponent_Template_button_click_4_listener() {\n          return ctx.submitTableForm();\n        });\n        i0.ɵɵtext(5, \"Submit\");\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(3, 1, ctx.tableForm$));\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgIf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName, i3.FormGroupName, i3.FormArrayName, i2.AsyncPipe],\n    styles: [\"[_nghost-%COMP%] {\\n  font-family: \\\"Segoe UI\\\", Tahoma, Geneva, Verdana, sans-serif;\\n}\\n\\ntable[_ngcontent-%COMP%] {\\n  width: 800px;\\n  margin-bottom: 25px;\\n  text-align: left;\\n  border: 1px solid #3e454c;\\n}\\ntable[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%] {\\n  background-color: #3e454c;\\n  color: #FFF;\\n}\\ntable[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]   th[_ngcontent-%COMP%] {\\n  padding: 5px;\\n  font-weight: 400;\\n}\\ntable[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%] {\\n  background-color: #FFF;\\n}\\ntable[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]   td[_ngcontent-%COMP%] {\\n  border: 1px solid #cdd3d6;\\n}\\ntable[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\n  border: none;\\n  padding: 5px;\\n}\\ntable[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]   input.ng-dirty[_ngcontent-%COMP%] {\\n  border: 2px solid darkcyan;\\n}\\ntable[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]   input.ng-invalid[_ngcontent-%COMP%] {\\n  border: 2px solid red;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy90YWJsZXMvdGFibGVzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksNERBQUE7QUFDSjs7QUFFQTtFQUNJLFlBQUE7RUFDQSxtQkFBQTtFQUNBLGdCQUFBO0VBQ0EseUJBQUE7QUFDSjtBQUNJO0VBQ0kseUJBQUE7RUFDQSxXQUFBO0FBQ1I7QUFFUTtFQUNJLFlBQUE7RUFDQSxnQkFBQTtBQUFaO0FBSUk7RUFDSSxzQkFBQTtBQUZSO0FBSVk7RUFDSSx5QkFBQTtBQUZoQjtBQUdnQjtFQUNJLFlBQUE7RUFDQSxZQUFBO0FBRHBCO0FBR29CO0VBQ0ksMEJBQUE7QUFEeEI7QUFHb0I7RUFDSSxxQkFBQTtBQUR4QiIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0IHtcbiAgICBmb250LWZhbWlseTonU2Vnb2UgVUknLCBUYWhvbWEsIEdlbmV2YSwgVmVyZGFuYSwgc2Fucy1zZXJpZlxufVxuXG50YWJsZSB7XG4gICAgd2lkdGg6IDgwMHB4O1xuICAgIG1hcmdpbi1ib3R0b206IDI1cHg7XG4gICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjM2U0NTRjO1xuXG4gICAgdGhlYWQge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjM2U0NTRjO1xuICAgICAgICBjb2xvcjogI0ZGRjtcbiAgICAgICAgXG5cbiAgICAgICAgdGgge1xuICAgICAgICAgICAgcGFkZGluZzogNXB4O1xuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHRib2R5IHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI0ZGRjtcbiAgICAgICAgdHIge1xuICAgICAgICAgICAgdGQge1xuICAgICAgICAgICAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNjZGQzZDY7XG4gICAgICAgICAgICAgICAgaW5wdXQge1xuICAgICAgICAgICAgICAgICAgICBib3JkZXI6IG5vbmU7XG4gICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDVweDtcblxuICAgICAgICAgICAgICAgICAgICAmLm5nLWRpcnR5IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJvcmRlcjogMnB4IHNvbGlkIGRhcmtjeWFuO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICYubmctaW52YWxpZCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBib3JkZXI6IDJweCBzb2xpZCByZWQ7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","rowIndex_r7","ɵɵtext","ɵɵtemplate","TablesComponent_div_2_div_2_tr_14_Template","areaIndex_r4","ɵɵtextInterpolate1","area_r3","controls","area","value","TablesComponent_div_2_div_2_Template","tableForm_r1","TablesComponent","constructor","tableFacade","tableForm","myForm","tableForm$","getDirtyValues","form","dirtyValues","Object","keys","forEach","key","currentControl","dirty","submitTableForm","console","log","_","ɵɵdirectiveInject","i1","TableFacade","_2","selectors","decls","vars","consts","template","TablesComponent_Template","rf","ctx","TablesComponent_div_2_Template","ɵɵlistener","TablesComponent_Template_button_click_4_listener","ɵɵpipeBind1"],"sources":["/home/thomaskv/code/learn/angular-reactive-form-table/src/app/components/tables/tables.component.ts","/home/thomaskv/code/learn/angular-reactive-form-table/src/app/components/tables/tables.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Observable, tap } from 'rxjs';\nimport { TableFacade } from 'src/app/facade/table.facade.service';\nimport { TableFormAreas } from 'src/app/service/form.service';\n\n@Component({\n  selector: 'app-tables',\n  templateUrl: './tables.component.html',\n  styleUrls: ['./tables.component.scss'],\n})\nexport class TablesComponent {\n  constructor(\n    private tableFacade: TableFacade\n  ) { }\n\n  public tableForm = this.tableFacade.myForm;\n  public tableForm$: Observable<FormGroup<TableFormAreas>> = this.tableFacade.tableForm$;\n\n\n  // Hacky recursive loop from Stackoverflow\n  private getDirtyValues(form: any) {\n    let dirtyValues = {};\n\n    Object.keys(form.controls)\n        .forEach(key => {\n            const currentControl = form.controls[key];\n\n            if (currentControl.dirty) {\n                if (currentControl.controls)\n                    dirtyValues[key] = this.getDirtyValues(currentControl);\n                else\n                    dirtyValues[key] = currentControl.value;\n            }\n        });\n\n    return dirtyValues;\n  }\n\n  public submitTableForm() {\n    console.log('SUBMIT');\n    console.log(this.tableForm.controls);\n    console.log('CHANGES');\n    console.log(this.getDirtyValues(this.tableForm));\n  }\n}\n","<h1>Tables</h1>\n\n<div *ngIf=\"tableForm$ | async as tableForm\" [formGroup]=\"tableForm\">\n\n    <div formArrayName=\"areas\">\n\n        <div *ngFor=\"let area of tableForm.controls['areas'].controls; let areaIndex=index;\">\n            <div [formGroupName]=\"areaIndex\">\n                <table>\n                    <thead>\n                        <tr>\n                            <th>\n                                {{area.controls.area.value}}\n                            </th>\n                            <th>\n                                Counter\n                            </th>\n                            <th>\n                                Total\n                            </th>\n                            <th>\n                                Adjustment\n                            </th>\n                        </tr>\n                    </thead>\n                    <!--{{ area.controls.area.value }}-->\n                    <tbody formArrayName=\"rows\">\n                        <tr *ngFor=\"let row of area.controls['rows'].controls; let rowIndex=index\">\n                            <td [formGroupName]=\"rowIndex\">\n                                <input formControlName=\"area\" />\n                            </td>\n                            <td [formGroupName]=\"rowIndex\">\n                                <input formControlName=\"tableCounter\" />\n                            </td>\n                            <td [formGroupName]=\"rowIndex\">\n                                <input formControlName=\"tableTotal\" />\n                            </td>\n                            <td [formGroupName]=\"rowIndex\">\n                                <input formControlName=\"tableAdjustment\" />\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n\n        \n    \n    </div>\n<!--<app-some-table [tableForm]=\"tableForm\"></app-some-table>-->\n<!--<div *ngFor=\"let tableForm of tableForm$ | async\">\n<p>Hmm</p>\n\n</div>-->\n\n</div>\n<button (click)=\"submitTableForm()\">Submit</button>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}