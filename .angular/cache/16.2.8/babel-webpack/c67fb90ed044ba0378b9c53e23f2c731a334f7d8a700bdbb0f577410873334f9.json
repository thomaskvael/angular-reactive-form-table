{"ast":null,"code":"import { tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/facade/table.facade.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../some-table/some-table.component\";\nfunction TablesComponent_div_2_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"app-some-table\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const area_r3 = ctx.$implicit;\n    const areaIndex_r4 = ctx.index;\n    const tableForm_r1 = i0.ɵɵnextContext().ngIf;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"tableForm\", tableForm_r1)(\"formGroupName\", areaIndex_r4)(\"area\", area_r3);\n  }\n}\nfunction TablesComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2);\n    i0.ɵɵtemplate(2, TablesComponent_div_2_div_2_Template, 2, 3, \"div\", 3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const tableForm_r1 = ctx.ngIf;\n    i0.ɵɵproperty(\"formGroup\", tableForm_r1);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", tableForm_r1.controls[\"areas\"].controls);\n  }\n}\nexport class TablesComponent {\n  constructor(tableFacade) {\n    this.tableFacade = tableFacade;\n    this.tableForm = this.tableFacade.myForm;\n    this.tableForm$ = this.tableFacade.tableForm$.pipe(tap(v => console.log('tap: ', v)));\n  }\n  static #_ = this.ɵfac = function TablesComponent_Factory(t) {\n    return new (t || TablesComponent)(i0.ɵɵdirectiveInject(i1.TableFacade));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TablesComponent,\n    selectors: [[\"app-tables\"]],\n    decls: 4,\n    vars: 3,\n    consts: [[3, \"formGroup\", 4, \"ngIf\"], [3, \"formGroup\"], [\"formArrayName\", \"areas\"], [4, \"ngFor\", \"ngForOf\"], [3, \"tableForm\", \"formGroupName\", \"area\"]],\n    template: function TablesComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1, \"Tables\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(2, TablesComponent_div_2_Template, 3, 2, \"div\", 0);\n        i0.ɵɵpipe(3, \"async\");\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(3, 1, ctx.tableForm$));\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgIf, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormGroupName, i3.FormArrayName, i4.SomeTableComponent, i2.AsyncPipe],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["tap","i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","tableForm_r1","areaIndex_r4","area_r3","ɵɵtemplate","TablesComponent_div_2_div_2_Template","controls","TablesComponent","constructor","tableFacade","tableForm","myForm","tableForm$","pipe","v","console","log","_","ɵɵdirectiveInject","i1","TableFacade","_2","selectors","decls","vars","consts","template","TablesComponent_Template","rf","ctx","ɵɵtext","TablesComponent_div_2_Template","ɵɵpipeBind1"],"sources":["/home/thomaskv/code/learn/angular-reactive-form-table/src/app/components/tables/tables.component.ts","/home/thomaskv/code/learn/angular-reactive-form-table/src/app/components/tables/tables.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Observable, tap } from 'rxjs';\nimport { TableFacade } from 'src/app/facade/table.facade.service';\nimport { TableFormAreas } from 'src/app/service/form.service';\n\n@Component({\n  selector: 'app-tables',\n  templateUrl: './tables.component.html',\n  styleUrls: ['./tables.component.css'],\n})\nexport class TablesComponent {\n  constructor(\n    private tableFacade: TableFacade\n  ) { }\n\n  public tableForm = this.tableFacade.myForm;\n\n  public tableForm$: Observable<FormGroup<TableFormAreas>> = this.tableFacade.tableForm$.pipe(tap(v => console.log('tap: ', v)));\n}\n","<h1>Tables</h1>\n\n<div *ngIf=\"tableForm$ | async as tableForm\" [formGroup]=\"tableForm\">\n\n    <!--<div formArrayName=\"areas\">\n\n        <div *ngFor=\"let area of tableForm.controls['areas'].controls; let areaIndex=index;\">\n            <div [formGroupName]=\"areaIndex\">\n                <input formControlName=\"area\" />\n                <div formArrayName=\"rows\">\n                    {{ area.controls.area.value }}\n                    <div *ngFor=\"let row of area.controls['rows'].controls; let rowIndex=index\">\n                        <div [formGroupName]=\"rowIndex\">\n                            <input formControlName=\"tableCounter\" />\n                        </div>\n                        \n                    </div>\n                </div>\n            </div>\n        </div>\n\n        \n    \n    </div>-->\n    <div formArrayName=\"areas\">\n        <div *ngFor=\"let area of tableForm.controls['areas'].controls; let areaIndex=index;\">\n            <app-some-table [tableForm]=\"tableForm\" [formGroupName]=\"areaIndex\" [area]=\"area\"></app-some-table>\n        </div>\n    </div>\n\n\n    \n\n<!--<div *ngFor=\"let tableForm of tableForm$ | async\">\n<p>Hmm</p>\n\n</div>-->\n\n\n</div>\n\n"],"mappings":"AAEA,SAAqBA,GAAG,QAAQ,MAAM;;;;;;;;ICuB9BC,EAAA,CAAAC,cAAA,UAAqF;IACjFD,EAAA,CAAAE,SAAA,wBAAmG;IACvGF,EAAA,CAAAG,YAAA,EAAM;;;;;;IADcH,EAAA,CAAAI,SAAA,GAAuB;IAAvBJ,EAAA,CAAAK,UAAA,cAAAC,YAAA,CAAuB,kBAAAC,YAAA,UAAAC,OAAA;;;;;IAxBnDR,EAAA,CAAAC,cAAA,aAAqE;IAuB7DD,EAAA,CAAAS,UAAA,IAAAC,oCAAA,iBAEM;IACVV,EAAA,CAAAG,YAAA,EAAM;;;;IA1BmCH,EAAA,CAAAK,UAAA,cAAAC,YAAA,CAAuB;IAuBtCN,EAAA,CAAAI,SAAA,GAAyC;IAAzCJ,EAAA,CAAAK,UAAA,YAAAC,YAAA,CAAAK,QAAA,UAAAA,QAAA,CAAyC;;;ADdvE,OAAM,MAAOC,eAAe;EAC1BC,YACUC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;IAGd,KAAAC,SAAS,GAAG,IAAI,CAACD,WAAW,CAACE,MAAM;IAEnC,KAAAC,UAAU,GAA0C,IAAI,CAACH,WAAW,CAACG,UAAU,CAACC,IAAI,CAACnB,GAAG,CAACoB,CAAC,IAAIC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEF,CAAC,CAAC,CAAC,CAAC;EAJ1H;EAAC,QAAAG,CAAA,G;qBAHMV,eAAe,EAAAZ,EAAA,CAAAuB,iBAAA,CAAAC,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAfd,eAAe;IAAAe,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,yBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCX5BjC,EAAA,CAAAC,cAAA,SAAI;QAAAD,EAAA,CAAAmC,MAAA,aAAM;QAAAnC,EAAA,CAAAG,YAAA,EAAK;QAEfH,EAAA,CAAAS,UAAA,IAAA2B,8BAAA,iBAqCM;;;;QArCApC,EAAA,CAAAI,SAAA,GAAyB;QAAzBJ,EAAA,CAAAK,UAAA,SAAAL,EAAA,CAAAqC,WAAA,OAAAH,GAAA,CAAAjB,UAAA,EAAyB"},"metadata":{},"sourceType":"module","externalDependencies":[]}