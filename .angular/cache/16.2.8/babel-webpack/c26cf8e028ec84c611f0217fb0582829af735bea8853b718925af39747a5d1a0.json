{"ast":null,"code":"import { tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../service/form.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction SomeTableComponent_div_2_div_2_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 4);\n    i0.ɵɵelement(2, \"input\", 7);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const rowIndex_r7 = ctx.index;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroupName\", rowIndex_r7);\n  }\n}\nfunction SomeTableComponent_div_2_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 4);\n    i0.ɵɵelement(2, \"input\", 5);\n    i0.ɵɵelementStart(3, \"div\", 6);\n    i0.ɵɵtext(4);\n    i0.ɵɵtemplate(5, SomeTableComponent_div_2_div_2_div_5_Template, 3, 1, \"div\", 3);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const area_r3 = ctx.$implicit;\n    const areaIndex_r4 = ctx.index;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroupName\", areaIndex_r4);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", area_r3.controls.area.value, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", area_r3.controls[\"rows\"].controls);\n  }\n}\nfunction SomeTableComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2);\n    i0.ɵɵtemplate(2, SomeTableComponent_div_2_div_2_Template, 6, 3, \"div\", 3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const tableForm_r1 = ctx.ngIf;\n    i0.ɵɵproperty(\"formGroup\", tableForm_r1);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", tableForm_r1.controls[\"areas\"].controls);\n  }\n}\nexport class SomeTableComponent {\n  constructor(formService) {\n    this.formService = formService;\n    //myForm: FormGroup;\n    this.myForm = this.formService.tableForm;\n    this.tableForm = this.tableFacade.myForm;\n    this.tableForm$ = this.tableFacade.tableForm$.pipe(tap(v => console.log('tap: ', v)));\n  }\n  ngOnInit() {\n    this.myForm = this.formService.tableForm;\n    console.log('My form: ', this.myForm);\n  }\n  static #_ = this.ɵfac = function SomeTableComponent_Factory(t) {\n    return new (t || SomeTableComponent)(i0.ɵɵdirectiveInject(i1.FormService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SomeTableComponent,\n    selectors: [[\"app-some-table\"]],\n    decls: 4,\n    vars: 3,\n    consts: [[3, \"formGroup\", 4, \"ngIf\"], [3, \"formGroup\"], [\"formArrayName\", \"areas\"], [4, \"ngFor\", \"ngForOf\"], [3, \"formGroupName\"], [\"formControlName\", \"area\"], [\"formArrayName\", \"rows\"], [\"formControlName\", \"tableCounter\"]],\n    template: function SomeTableComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"some-table works!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(2, SomeTableComponent_div_2_Template, 3, 2, \"div\", 0);\n        i0.ɵɵpipe(3, \"async\");\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(3, 1, ctx.tableForm$));\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgIf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName, i3.FormGroupName, i3.FormArrayName, i2.AsyncPipe],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["tap","i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","rowIndex_r7","ɵɵtext","ɵɵtemplate","SomeTableComponent_div_2_div_2_div_5_Template","areaIndex_r4","ɵɵtextInterpolate1","area_r3","controls","area","value","SomeTableComponent_div_2_div_2_Template","tableForm_r1","SomeTableComponent","constructor","formService","myForm","tableForm","tableFacade","tableForm$","pipe","v","console","log","ngOnInit","_","ɵɵdirectiveInject","i1","FormService","_2","selectors","decls","vars","consts","template","SomeTableComponent_Template","rf","ctx","SomeTableComponent_div_2_Template","ɵɵpipeBind1"],"sources":["/home/thomaskv/code/learn/angular-reactive-form-table/src/app/components/some-table/some-table.component.ts","/home/thomaskv/code/learn/angular-reactive-form-table/src/app/components/some-table/some-table.component.html"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n//import { ValidateUrl, emailDomain } from '../validator';\nimport { FormService } from '../../service/form.service';\nimport { Observable, tap } from 'rxjs';\n\n@Component({\n  selector: 'app-some-table',\n  templateUrl: './some-table.component.html',\n  styleUrls: ['./some-table.component.css'],\n})\nexport class SomeTableComponent implements OnInit {\n  //myForm: FormGroup;\n  public myForm: FormGroup = this.formService.tableForm;\n\n  public tableForm = this.tableFacade.myForm;\n\n  public tableForm$: Observable<FormGroup<TableFormAreas>> = this.tableFacade.tableForm$.pipe(tap(v => console.log('tap: ', v)));\n\n  constructor(private formService: FormService) {}\n\n  ngOnInit() {\n    this.myForm = this.formService.tableForm;\n    console.log('My form: ', this.myForm)\n  }\n}\n","<p>some-table works!</p>\n\n<div *ngIf=\"tableForm$ | async as tableForm\" [formGroup]=\"tableForm\">\n  <div formArrayName=\"areas\">\n\n    <div *ngFor=\"let area of tableForm.controls['areas'].controls; let areaIndex=index;\">\n        <div [formGroupName]=\"areaIndex\">\n            <input formControlName=\"area\" />\n            <div formArrayName=\"rows\">\n                {{ area.controls.area.value }}\n                <div *ngFor=\"let row of area.controls['rows'].controls; let rowIndex=index\">\n                    <div [formGroupName]=\"rowIndex\">\n                        <input formControlName=\"tableCounter\" />\n                    </div>\n                    \n                </div>\n            </div>\n        </div>\n    </div>\n\n    \n\n  </div>\n</div>\n<!--\n<table border=1 [formGroup]=\"invoiceForm\">\n  <thead>\n    <th>Id</th>\n    <th>Name</th>\n    <th>Action</th>\n  </thead>\n  <tbody formArrayName=\"Rows\">\n    <tr *ngFor=\"let itemrow of invoiceForm.controls.Rows.controls; let i=index;let l=last\"\n      [formGroupName]=\"i\">\n      <td>{{i+1}}</td>\n      <td>\n        <input formControlName=\"name\" class=\"form-control\">\n      </td>\n      <td>\n        <button *ngIf=\"invoiceForm.controls.Rows.controls.length > 1\" (click)=\"deleteRow(i)\" class=\"btn btn-danger\">Delete</button>\n      </td>\n    </tr>\n  </tbody>\n-->\n"],"mappings":"AAKA,SAAqBA,GAAG,QAAQ,MAAM;;;;;;;ICKtBC,EAAA,CAAAC,cAAA,UAA4E;IAEpED,EAAA,CAAAE,SAAA,eAAwC;IAC5CF,EAAA,CAAAG,YAAA,EAAM;;;;IAFDH,EAAA,CAAAI,SAAA,GAA0B;IAA1BJ,EAAA,CAAAK,UAAA,kBAAAC,WAAA,CAA0B;;;;;IAN/CN,EAAA,CAAAC,cAAA,UAAqF;IAE7ED,EAAA,CAAAE,SAAA,eAAgC;IAChCF,EAAA,CAAAC,cAAA,aAA0B;IACtBD,EAAA,CAAAO,MAAA,GACA;IAAAP,EAAA,CAAAQ,UAAA,IAAAC,6CAAA,iBAKM;IACVT,EAAA,CAAAG,YAAA,EAAM;;;;;IAVLH,EAAA,CAAAI,SAAA,GAA2B;IAA3BJ,EAAA,CAAAK,UAAA,kBAAAK,YAAA,CAA2B;IAGxBV,EAAA,CAAAI,SAAA,GACA;IADAJ,EAAA,CAAAW,kBAAA,MAAAC,OAAA,CAAAC,QAAA,CAAAC,IAAA,CAAAC,KAAA,MACA;IAAqBf,EAAA,CAAAI,SAAA,GAAmC;IAAnCJ,EAAA,CAAAK,UAAA,YAAAO,OAAA,CAAAC,QAAA,SAAAA,QAAA,CAAmC;;;;;IARxEb,EAAA,CAAAC,cAAA,aAAqE;IAGjED,EAAA,CAAAQ,UAAA,IAAAQ,uCAAA,iBAaM;IAIRhB,EAAA,CAAAG,YAAA,EAAM;;;;IApBqCH,EAAA,CAAAK,UAAA,cAAAY,YAAA,CAAuB;IAG1CjB,EAAA,CAAAI,SAAA,GAAyC;IAAzCJ,EAAA,CAAAK,UAAA,YAAAY,YAAA,CAAAJ,QAAA,UAAAA,QAAA,CAAyC;;;ADOnE,OAAM,MAAOK,kBAAkB;EAQ7BC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;IAP/B;IACO,KAAAC,MAAM,GAAc,IAAI,CAACD,WAAW,CAACE,SAAS;IAE9C,KAAAA,SAAS,GAAG,IAAI,CAACC,WAAW,CAACF,MAAM;IAEnC,KAAAG,UAAU,GAA0C,IAAI,CAACD,WAAW,CAACC,UAAU,CAACC,IAAI,CAAC1B,GAAG,CAAC2B,CAAC,IAAIC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEF,CAAC,CAAC,CAAC,CAAC;EAE/E;EAE/CG,QAAQA,CAAA;IACN,IAAI,CAACR,MAAM,GAAG,IAAI,CAACD,WAAW,CAACE,SAAS;IACxCK,OAAO,CAACC,GAAG,CAAC,WAAW,EAAE,IAAI,CAACP,MAAM,CAAC;EACvC;EAAC,QAAAS,CAAA,G;qBAbUZ,kBAAkB,EAAAlB,EAAA,CAAA+B,iBAAA,CAAAC,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAlBhB,kBAAkB;IAAAiB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,4BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCZ/BzC,EAAA,CAAAC,cAAA,QAAG;QAAAD,EAAA,CAAAO,MAAA,wBAAiB;QAAAP,EAAA,CAAAG,YAAA,EAAI;QAExBH,EAAA,CAAAQ,UAAA,IAAAmC,iCAAA,iBAqBM;;;;QArBA3C,EAAA,CAAAI,SAAA,GAAyB;QAAzBJ,EAAA,CAAAK,UAAA,SAAAL,EAAA,CAAA4C,WAAA,OAAAF,GAAA,CAAAlB,UAAA,EAAyB"},"metadata":{},"sourceType":"module","externalDependencies":[]}