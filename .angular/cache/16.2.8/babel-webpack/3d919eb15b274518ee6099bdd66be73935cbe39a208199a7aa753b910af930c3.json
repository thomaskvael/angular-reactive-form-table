{"ast":null,"code":"import { catchError, of } from 'rxjs';\nimport * as MOCK_GET from 'src/app/mock/mock-api.json';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ApiService {\n  constructor(http) {\n    this.http = http;\n  }\n  get getTableData() {\n    return this.http.get(MOCK_GET).pipe(catchError(_error => of(null)));\n  }\n  static #_ = this.ɵfac = function ApiService_Factory(t) {\n    return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ApiService,\n    factory: ApiService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["catchError","of","MOCK_GET","ApiService","constructor","http","getTableData","get","pipe","_error","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["/home/thomaskv/code/learn/angular-reactive-form-table/src/app/service/api.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { catchError, Observable, of } from 'rxjs';\nimport * as MOCK_GET from 'src/app/mock/mock-api.json';\nimport { SomeTableDto } from '../model/some-table.model.ts';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ApiService {\n  constructor(private http: HttpClient) {}\n\n  public get getTableData(): Observable<SomeTableDto[]> {\n    return this.http\n      .get<SomeTableDto[]>(MOCK_GET)\n      .pipe(catchError((_error) => of(null)));\n  }\n}\n"],"mappings":"AAEA,SAASA,UAAU,EAAcC,EAAE,QAAQ,MAAM;AACjD,OAAO,KAAKC,QAAQ,MAAM,4BAA4B;;;AAMtD,OAAM,MAAOC,UAAU;EACrBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAe;EAEvC,IAAWC,YAAYA,CAAA;IACrB,OAAO,IAAI,CAACD,IAAI,CACbE,GAAG,CAAiBL,QAAQ,CAAC,CAC7BM,IAAI,CAACR,UAAU,CAAES,MAAM,IAAKR,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;EAC3C;EAAC,QAAAS,CAAA,G;qBAPUP,UAAU,EAAAQ,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAVZ,UAAU;IAAAa,OAAA,EAAVb,UAAU,CAAAc,IAAA;IAAAC,UAAA,EAFT;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}