{"ast":null,"code":"import { tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/facade/table.facade.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../some-table/some-table.component\";\nfunction TablesComponent_div_2_div_2_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 5);\n    i0.ɵɵelement(2, \"input\", 8);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const rowIndex_r7 = ctx.index;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroupName\", rowIndex_r7);\n  }\n}\nfunction TablesComponent_div_2_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 5);\n    i0.ɵɵelement(2, \"input\", 6);\n    i0.ɵɵelementStart(3, \"div\", 7);\n    i0.ɵɵtext(4);\n    i0.ɵɵtemplate(5, TablesComponent_div_2_div_2_div_5_Template, 3, 1, \"div\", 3);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const area_r3 = ctx.$implicit;\n    const areaIndex_r4 = ctx.index;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroupName\", areaIndex_r4);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", area_r3.controls.area.value, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", area_r3.controls[\"rows\"].controls);\n  }\n}\nfunction TablesComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2);\n    i0.ɵɵtemplate(2, TablesComponent_div_2_div_2_Template, 6, 3, \"div\", 3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"app-some-table\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const tableForm_r1 = ctx.ngIf;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", tableForm_r1);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", tableForm_r1.controls[\"areas\"].controls);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"tableForm$\", ctx_r0.tableForm$)(\"tableForm\", tableForm_r1);\n  }\n}\nexport class TablesComponent {\n  constructor(tableFacade) {\n    this.tableFacade = tableFacade;\n    this.tableForm = this.tableFacade.myForm;\n    this.tableForm$ = this.tableFacade.tableForm$.pipe(tap(v => console.log('tap: ', v)));\n  }\n  static #_ = this.ɵfac = function TablesComponent_Factory(t) {\n    return new (t || TablesComponent)(i0.ɵɵdirectiveInject(i1.TableFacade));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TablesComponent,\n    selectors: [[\"app-tables\"]],\n    decls: 4,\n    vars: 3,\n    consts: [[3, \"formGroup\", 4, \"ngIf\"], [3, \"formGroup\"], [\"formArrayName\", \"areas\"], [4, \"ngFor\", \"ngForOf\"], [3, \"tableForm$\", \"tableForm\"], [3, \"formGroupName\"], [\"formControlName\", \"area\"], [\"formArrayName\", \"rows\"], [\"formControlName\", \"tableCounter\"]],\n    template: function TablesComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1, \"Tables\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(2, TablesComponent_div_2_Template, 4, 4, \"div\", 0);\n        i0.ɵɵpipe(3, \"async\");\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(3, 1, ctx.tableForm$));\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgIf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName, i3.FormGroupName, i3.FormArrayName, i4.SomeTableComponent, i2.AsyncPipe],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["tap","i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","rowIndex_r7","ɵɵtext","ɵɵtemplate","TablesComponent_div_2_div_2_div_5_Template","areaIndex_r4","ɵɵtextInterpolate1","area_r3","controls","area","value","TablesComponent_div_2_div_2_Template","tableForm_r1","ctx_r0","tableForm$","TablesComponent","constructor","tableFacade","tableForm","myForm","pipe","v","console","log","_","ɵɵdirectiveInject","i1","TableFacade","_2","selectors","decls","vars","consts","template","TablesComponent_Template","rf","ctx","TablesComponent_div_2_Template","ɵɵpipeBind1"],"sources":["/home/thomaskv/code/learn/angular-reactive-form-table/src/app/components/tables/tables.component.ts","/home/thomaskv/code/learn/angular-reactive-form-table/src/app/components/tables/tables.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Observable, tap } from 'rxjs';\nimport { TableFacade } from 'src/app/facade/table.facade.service';\nimport { TableFormAreas } from 'src/app/service/form.service';\n\n@Component({\n  selector: 'app-tables',\n  templateUrl: './tables.component.html',\n  styleUrls: ['./tables.component.css'],\n})\nexport class TablesComponent {\n  constructor(\n    private tableFacade: TableFacade\n  ) { }\n\n  public tableForm = this.tableFacade.myForm;\n\n  public tableForm$: Observable<FormGroup<TableFormAreas>> = this.tableFacade.tableForm$.pipe(tap(v => console.log('tap: ', v)));\n}\n","<h1>Tables</h1>\n\n<div *ngIf=\"tableForm$ | async as tableForm\" [formGroup]=\"tableForm\">\n\n    <div formArrayName=\"areas\">\n\n        <div *ngFor=\"let area of tableForm.controls['areas'].controls; let areaIndex=index;\">\n            <div [formGroupName]=\"areaIndex\">\n                <input formControlName=\"area\" />\n                <div formArrayName=\"rows\">\n                    {{ area.controls.area.value }}\n                    <div *ngFor=\"let row of area.controls['rows'].controls; let rowIndex=index\">\n                        <div [formGroupName]=\"rowIndex\">\n                            <input formControlName=\"tableCounter\" />\n                        </div>\n                        \n                    </div>\n                </div>\n            </div>\n        </div>\n\n        \n    \n    </div>\n\n<!--<div *ngFor=\"let tableForm of tableForm$ | async\">\n<p>Hmm</p>\n\n</div>-->\n<app-some-table [tableForm$]=\"tableForm$\" [tableForm]=\"tableForm\"></app-some-table>\n\n</div>"],"mappings":"AAEA,SAAqBA,GAAG,QAAQ,MAAM;;;;;;;;ICSlBC,EAAA,CAAAC,cAAA,UAA4E;IAEpED,EAAA,CAAAE,SAAA,eAAwC;IAC5CF,EAAA,CAAAG,YAAA,EAAM;;;;IAFDH,EAAA,CAAAI,SAAA,GAA0B;IAA1BJ,EAAA,CAAAK,UAAA,kBAAAC,WAAA,CAA0B;;;;;IAN/CN,EAAA,CAAAC,cAAA,UAAqF;IAE7ED,EAAA,CAAAE,SAAA,eAAgC;IAChCF,EAAA,CAAAC,cAAA,aAA0B;IACtBD,EAAA,CAAAO,MAAA,GACA;IAAAP,EAAA,CAAAQ,UAAA,IAAAC,0CAAA,iBAKM;IACVT,EAAA,CAAAG,YAAA,EAAM;;;;;IAVLH,EAAA,CAAAI,SAAA,GAA2B;IAA3BJ,EAAA,CAAAK,UAAA,kBAAAK,YAAA,CAA2B;IAGxBV,EAAA,CAAAI,SAAA,GACA;IADAJ,EAAA,CAAAW,kBAAA,MAAAC,OAAA,CAAAC,QAAA,CAAAC,IAAA,CAAAC,KAAA,MACA;IAAqBf,EAAA,CAAAI,SAAA,GAAmC;IAAnCJ,EAAA,CAAAK,UAAA,YAAAO,OAAA,CAAAC,QAAA,SAAAA,QAAA,CAAmC;;;;;IAT5Eb,EAAA,CAAAC,cAAA,aAAqE;IAI7DD,EAAA,CAAAQ,UAAA,IAAAQ,oCAAA,iBAaM;IAIVhB,EAAA,CAAAG,YAAA,EAAM;IAMVH,EAAA,CAAAE,SAAA,wBAAmF;IAEnFF,EAAA,CAAAG,YAAA,EAAM;;;;;IA7BuCH,EAAA,CAAAK,UAAA,cAAAY,YAAA,CAAuB;IAItCjB,EAAA,CAAAI,SAAA,GAAyC;IAAzCJ,EAAA,CAAAK,UAAA,YAAAY,YAAA,CAAAJ,QAAA,UAAAA,QAAA,CAAyC;IAuBvDb,EAAA,CAAAI,SAAA,GAAyB;IAAzBJ,EAAA,CAAAK,UAAA,eAAAa,MAAA,CAAAC,UAAA,CAAyB,cAAAF,YAAA;;;ADlBzC,OAAM,MAAOG,eAAe;EAC1BC,YACUC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;IAGd,KAAAC,SAAS,GAAG,IAAI,CAACD,WAAW,CAACE,MAAM;IAEnC,KAAAL,UAAU,GAA0C,IAAI,CAACG,WAAW,CAACH,UAAU,CAACM,IAAI,CAAC1B,GAAG,CAAC2B,CAAC,IAAIC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEF,CAAC,CAAC,CAAC,CAAC;EAJ1H;EAAC,QAAAG,CAAA,G;qBAHMT,eAAe,EAAApB,EAAA,CAAA8B,iBAAA,CAAAC,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAfb,eAAe;IAAAc,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,yBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCX5BxC,EAAA,CAAAC,cAAA,SAAI;QAAAD,EAAA,CAAAO,MAAA,aAAM;QAAAP,EAAA,CAAAG,YAAA,EAAK;QAEfH,EAAA,CAAAQ,UAAA,IAAAkC,8BAAA,iBA6BM;;;;QA7BA1C,EAAA,CAAAI,SAAA,GAAyB;QAAzBJ,EAAA,CAAAK,UAAA,SAAAL,EAAA,CAAA2C,WAAA,OAAAF,GAAA,CAAAtB,UAAA,EAAyB"},"metadata":{},"sourceType":"module","externalDependencies":[]}