{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../service/form.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction SomeTableComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 0);\n    i0.ɵɵelement(2, \"input\", 4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const rowIndex_r2 = ctx.index;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroupName\", rowIndex_r2);\n  }\n}\nexport class SomeTableComponent {\n  constructor(formService) {\n    this.formService = formService;\n    //myForm: FormGroup;\n    this.myForm = this.formService.tableForm;\n  }\n  static #_ = this.ɵfac = function SomeTableComponent_Factory(t) {\n    return new (t || SomeTableComponent)(i0.ɵɵdirectiveInject(i1.FormService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SomeTableComponent,\n    selectors: [[\"app-some-table\"]],\n    inputs: {\n      tableForm: \"tableForm\",\n      areaIndex: \"areaIndex\",\n      area: \"area\"\n    },\n    decls: 7,\n    vars: 3,\n    consts: [[3, \"formGroupName\"], [\"formControlName\", \"area\"], [\"formArrayName\", \"rows\"], [4, \"ngFor\", \"ngForOf\"], [\"formControlName\", \"tableCounter\"]],\n    template: function SomeTableComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"some-table works!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 0);\n        i0.ɵɵelement(3, \"input\", 1);\n        i0.ɵɵelementStart(4, \"div\", 2);\n        i0.ɵɵtext(5);\n        i0.ɵɵtemplate(6, SomeTableComponent_div_6_Template, 3, 1, \"div\", 3);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroupName\", ctx.areaIndex);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" \", ctx.area.controls.area.value, \" \");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.area.controls[\"rows\"].controls);\n      }\n    },\n    dependencies: [i2.NgForOf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormControlName, i3.FormGroupName, i3.FormArrayName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","rowIndex_r2","SomeTableComponent","constructor","formService","myForm","tableForm","_","ɵɵdirectiveInject","i1","FormService","_2","selectors","inputs","areaIndex","area","decls","vars","consts","template","SomeTableComponent_Template","rf","ctx","ɵɵtext","ɵɵtemplate","SomeTableComponent_div_6_Template","ɵɵtextInterpolate1","controls","value"],"sources":["/home/thomaskv/code/learn/angular-reactive-form-table/src/app/components/some-table/some-table.component.ts","/home/thomaskv/code/learn/angular-reactive-form-table/src/app/components/some-table/some-table.component.html"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { FormArray, FormGroup } from '@angular/forms';\n\n//import { ValidateUrl, emailDomain } from '../validator';\nimport { FormService, TableFormArea, TableFormAreas } from '../../service/form.service';\nimport { Observable, tap } from 'rxjs';\n\n@Component({\n  selector: 'app-some-table',\n  templateUrl: './some-table.component.html',\n  styleUrls: ['./some-table.component.css'],\n})\nexport class SomeTableComponent{\n  //myForm: FormGroup;\n  public myForm: FormGroup = this.formService.tableForm;\n\n\n\n  @Input() tableForm!: FormGroup<TableFormAreas>;\n  @Input() areaIndex: number;\n  @Input() area: TableFormArea;\n\n  constructor(private formService: FormService) {}\n}\n","<p>some-table works!</p>\n\n<div [formGroupName]=\"areaIndex\">\n  <input formControlName=\"area\" />\n  <div formArrayName=\"rows\">\n      {{ area.controls.area.value }}\n      <div *ngFor=\"let row of area.controls['rows'].controls; let rowIndex=index\">\n          <div [formGroupName]=\"rowIndex\">\n              <input formControlName=\"tableCounter\" />\n          </div>\n          \n      </div>\n  </div>\n</div>\n<!--\n<table border=1 [formGroup]=\"invoiceForm\">\n  <thead>\n    <th>Id</th>\n    <th>Name</th>\n    <th>Action</th>\n  </thead>\n  <tbody formArrayName=\"Rows\">\n    <tr *ngFor=\"let itemrow of invoiceForm.controls.Rows.controls; let i=index;let l=last\"\n      [formGroupName]=\"i\">\n      <td>{{i+1}}</td>\n      <td>\n        <input formControlName=\"name\" class=\"form-control\">\n      </td>\n      <td>\n        <button *ngIf=\"invoiceForm.controls.Rows.controls.length > 1\" (click)=\"deleteRow(i)\" class=\"btn btn-danger\">Delete</button>\n      </td>\n    </tr>\n  </tbody>\n-->\n"],"mappings":";;;;;;ICMMA,EAAA,CAAAC,cAAA,UAA4E;IAEpED,EAAA,CAAAE,SAAA,eAAwC;IAC5CF,EAAA,CAAAG,YAAA,EAAM;;;;IAFDH,EAAA,CAAAI,SAAA,GAA0B;IAA1BJ,EAAA,CAAAK,UAAA,kBAAAC,WAAA,CAA0B;;;ADKzC,OAAM,MAAOC,kBAAkB;EAU7BC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;IAT/B;IACO,KAAAC,MAAM,GAAc,IAAI,CAACD,WAAW,CAACE,SAAS;EAQN;EAAC,QAAAC,CAAA,G;qBAVrCL,kBAAkB,EAAAP,EAAA,CAAAa,iBAAA,CAAAC,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAlBT,kBAAkB;IAAAU,SAAA;IAAAC,MAAA;MAAAP,SAAA;MAAAQ,SAAA;MAAAC,IAAA;IAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,4BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCZ/B1B,EAAA,CAAAC,cAAA,QAAG;QAAAD,EAAA,CAAA4B,MAAA,wBAAiB;QAAA5B,EAAA,CAAAG,YAAA,EAAI;QAExBH,EAAA,CAAAC,cAAA,aAAiC;QAC/BD,EAAA,CAAAE,SAAA,eAAgC;QAChCF,EAAA,CAAAC,cAAA,aAA0B;QACtBD,EAAA,CAAA4B,MAAA,GACA;QAAA5B,EAAA,CAAA6B,UAAA,IAAAC,iCAAA,iBAKM;QACV9B,EAAA,CAAAG,YAAA,EAAM;;;QAVHH,EAAA,CAAAI,SAAA,GAA2B;QAA3BJ,EAAA,CAAAK,UAAA,kBAAAsB,GAAA,CAAAR,SAAA,CAA2B;QAG1BnB,EAAA,CAAAI,SAAA,GACA;QADAJ,EAAA,CAAA+B,kBAAA,MAAAJ,GAAA,CAAAP,IAAA,CAAAY,QAAA,CAAAZ,IAAA,CAAAa,KAAA,MACA;QAAqBjC,EAAA,CAAAI,SAAA,GAAmC;QAAnCJ,EAAA,CAAAK,UAAA,YAAAsB,GAAA,CAAAP,IAAA,CAAAY,QAAA,SAAAA,QAAA,CAAmC"},"metadata":{},"sourceType":"module","externalDependencies":[]}